---
import IndexLayout from "../components/IndexLayout";
import "../styles/global.css";
import { getPath } from "../utils/path";
---

<html lang="zh-CN" class="light">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href={getPath("/favicon.svg")} />
    <meta name="theme-color" content="#ffffff" />
    <title>我的组件库</title>
    <script>
      // 防止主题闪烁的脚本，需要在页面加载前执行
      (function() {
        const savedTheme = localStorage.getItem('theme');
        const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        const theme = savedTheme || systemTheme;

        document.documentElement.classList.remove('light', 'dark');
        document.documentElement.classList.add(theme);

        // 更新 meta theme-color
        const metaThemeColor = document.querySelector('meta[name="theme-color"]');
        if (metaThemeColor) {
          metaThemeColor.setAttribute('content', theme === 'dark' ? '#0f172a' : '#ffffff');
        }
      })();
    </script>
  </head>
  <body class="bg-gray-50 dark:bg-dark-900 min-h-screen transition-theme duration-300">
    <!-- 固定导航栏 -->
    <header class="fixed top-0 left-0 right-0 bg-white/90 dark:bg-dark-800/90 backdrop-blur-md shadow-sm dark:shadow-gray-900/20 z-50 border-b border-gray-200/50 dark:border-gray-700/50 transition-theme duration-300">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex justify-between items-center h-16">
        <div class="flex items-center space-x-8">
          <!-- Logo -->
          <a href="/" class="flex items-center space-x-2 text-xl font-bold text-primary-600 dark:text-primary-400 transition-theme duration-300">
            <div class="w-8 h-8 bg-gradient-to-br from-primary-500 to-purple-600 rounded-lg flex items-center justify-center shadow-lg">
              <span class="text-white font-bold text-sm">K</span>
            </div>
            <span>Kitty UI</span>
          </a>

          <!-- 主导航 -->
          <nav class="hidden md:flex items-center space-x-1">
            <a href="/docs" class="px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md transition-all duration-300">
              指南
            </a>
            <a href="/docs/components/button" class="px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md transition-all duration-300">
              组件
            </a>
            <a href="#examples" class="px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md transition-all duration-300">
              示例
            </a>
          </nav>
        </div>

        <!-- 右侧操作区 -->
        <div class="flex items-center space-x-4">
          <!-- 版本标识 -->
          <div class="hidden sm:flex items-center px-2 py-1 bg-primary-100 dark:bg-primary-900/30 text-primary-700 dark:text-primary-300 text-xs font-medium rounded-full">
            v0.1.0
          </div>

          <!-- GitHub 链接 -->
          <a href="https://github.com/l630630/Kitty" class="hidden md:flex items-center justify-center w-9 h-9 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md transition-theme duration-300" target="_blank" aria-label="GitHub">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
            </svg>
          </a>

          <!-- 主题切换 -->
          <div id="theme-toggle-container-index"></div>

          <!-- 移动端菜单按钮 -->
          <button id="mobile-menu-button" class="md:hidden flex items-center justify-center w-9 h-9 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md transition-theme duration-300">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
            </svg>
          </button>
        </div>
      </div>
    </header>

    <!-- 主内容，添加顶部间距 -->
    <div class="pt-16">
      <IndexLayout client:load />
    </div>

    <script>
      // 初始化首页的主题切换功能
      document.addEventListener('DOMContentLoaded', function() {
        // 初始化主题切换组件
        import('../components/ThemeToggle.tsx').then(({ default: ThemeToggle }) => {
          import('react').then(React => {
            import('react-dom/client').then(ReactDOM => {
              const themeToggleContainer = document.getElementById('theme-toggle-container-index');
              if (themeToggleContainer) {
                const root = ReactDOM.createRoot(themeToggleContainer);
                root.render(React.createElement(ThemeToggle));
              }
            });
          });
        });
      });
    </script>
  </body>
</html>